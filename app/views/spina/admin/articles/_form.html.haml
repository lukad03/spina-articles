- content_for(:permanent_notice) do
  - unless current_account.robots_allowed?
    .permanent-notice.permanent-notice-info
      = icon('search')
      %p
        =t 'spina.pages.invisible_to_search_engines'
        %small=t 'spina.pages.invisible_to_search_engines_description'

- if @article.errors.any?
  - content_for :notifications do
    .notification.notification-danger.animated.fadeInRight
      = icon('exclamation')
      .notification-message
        =t 'spina.notifications.alert'
        %small= @article.errors.full_messages.join('<br />').html_safe
      = link_to '#', data: {close_notification: true} do
        = icon('cross')

= form_for [@article], multipart: true, html: { autocomplete: "off" }, url: admin_articles_path do |f|
  %header#header
    .breadcrumbs= render_breadcrumbs separator: '<div class="divider"></div>'
    #header_actions
      %button.button.button-primary{type: 'submit'}
        = icon('check')
        = t('spina.articles.save', scaffold_name: t('spina.articles.scaffold_name'))
      = link_to t('spina.cancel'), spina.admin_articles_path, class: 'button button button-secondary'

  #page_content.tab-content.active.well
    .horizontal-form
      .horizontal-form-group
        .horizontal-form-label
          = Spina::Page.human_attribute_name :title
        .horizontal-form-content
          = f.text_field :title, placeholder: Spina::Page.human_attribute_name(:title_placeholder)
      .horizontal-form-group
        .horizontal-form-label
          Teaser
        .horizontal-form-content
          = f.text_area :teaser
      .horizontal-form-group
        .horizontal-form-label
          Body
        .horizontal-form-content
          = render 'spina/admin/shared/rich_text_field', f: f, field: :body
      .horizontal-form-group
        .horizontal-form-label
          Photo
        .horizontal-form-content
          = link_to spina.photo_select_admin_photos_path(f.object_name, selected_photo_id: (f.object.photo_id if f.object.photo_id.present?), hidden_field_id: 'photo_id'), remote: true, class: "media_picker" do
            - if f.object.photo && f.object.photo.file.present?
              .placeholder.pull-right
                %span.button.button-small.button-round
                  %i.icon.icon-dots
                  = t 'spina.pages.photo_picker'
              .image
                = image_tag f.object.photo.file.thumb
            - else
              .placeholder
                %span.button.button-small.button-round
                  %i.icon.icon-dots
                  = t 'spina.pages.photo_picker'
            = f.hidden_field :photo_id, data: { hidden_field_id: 'photo_id' }
      .horizontal-form-group
        .horizontal-form-label
          Publish date
        .horizontal-form-content
          = f.text_field :publish_date, value: (@article.publish_date.strftime("%d-%m-%Y") unless @article.new_record?), class: 'datepicker'
      .horizontal-form-group
        .horizontal-form-label
          Author
        .horizontal-form-content
          = f.text_field :author
      .horizontal-form-group
        .horizontal-form-label
          Draft?
        .horizontal-form-content
          = f.check_box :draft, data: { switch: true }

  - unless @article.new_record?
    .pull-right= link_to t('spina.permanently_delete'), spina.admin_article_path(@article), method: :delete, data: {confirm: t('spina.pages.delete_confirmation', subject: @article.title) }, class: 'button button-link button-danger'
